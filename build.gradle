plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group


base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        url = uri('https://mschae23.de/git/api/packages/mschae23/maven')
    }

    maven {
        name "Nucleoid"
        url "https://maven.nucleoid.xyz/"
    }

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    [
        "fabric-api-base",
        "fabric-registry-sync-v0",
        "fabric-command-api-v2",
        "fabric-entity-events-v1",
        "fabric-lifecycle-events-v1",
        "fabric-message-api-v1",
        "fabric-events-interaction-v0"
    ].forEach { modImplementation fabricApi.module(it, project.fabric_api_version) }

    modImplementation "de.mschae23:codec-config-api:${project.codec_config_api_version}"
    include "de.mschae23:codec-config-api:${project.codec_config_api_version}"

    modImplementation "net.luckperms:api:${project.luckperms_api_version}"
    modImplementation "me.lucko:fabric-permissions-api:${project.permission_api_version}"

    modImplementation "eu.pb4:placeholder-api:${project.placeholder_api_version}"
    include "eu.pb4:placeholder-api:${project.placeholder_api_version}"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

loom {
    accessWidenerPath = file('src/main/resources/serverutils.accesswidener')

    decompilers {
        vineflower {
            options.put("ind", "    ")
            options.put("nls", "1")
        }
    }
}

java {
    withSourcesJar()
}

jar {
    from('COPYING')
    from('COPYING.LESSER')
}

publishing {
    publications {
        mod(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "Forgejo"
            url = uri("https://mschae23.de/git/api/packages/mschae23/maven")

            credentials(HttpHeaderCredentials) {
                name = "Authorization"
                value = "token ${System.getenv("FORGEJO_PACKAGES_TOKEN")}"
            }

            authentication {
                header(HttpHeaderAuthentication)
            }
        }

    }
}
